# This file is generated by taro.
# This and ErrorType are a starting point for unified error presentation.
# You can use them to render errors from various sources (ActiveRecord etc.)
# and render error responses in rescue_from in a consistent way.
# You can customize these files to fit your needs, or delete them.
class ErrorsType < Taro::Types::ListType
  self.item_type = ErrorType

  def coerce_input
    input_error 'ErrorsType cannot be used as input type'
  end

  def coerce_response
    list =
      case object<%- if defined?(ActiveRecord) %>
      when ActiveModel::Errors
        object.errors
      when ActiveRecord::Base
        object.errors.errors<%- end %>
      when Array
        object
      when Hash<%- if defined?(Interactor::Context) %>, Interactor::Context<%- end %>
        object.to_h.fetch(:errors)
      else
        response_error("must be an Enumerable or an object with errors")
      end

    list.map { |el| self.class.item_type.new(el).cached_coerce_response }
  end
end
